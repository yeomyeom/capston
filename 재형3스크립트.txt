1페이지
저희는 블로그 글의 분류를 위해 3가지 아이디어를 제시한 바 있습니다. 그 구현을 SVM, 지지 벡터 머신을 통해 하려고 합니다. 텍스트 클래시피케이션을 위해 사용되는 다른 알고리즘, kmean이 아닌 SVM을 사용하는 이유는 다음과 같습니다.
첫 째로 kmean의 경우 통계적인 접근을 통해 클래시피케이션이 이루어지므로 학습 데이터가 충분히 크지 않으면 잘 작동하지 않습니다. 반면에 SVM은 하이퍼플레인을 이용해 작동하기 때문에 상대적으로 적은 데이터에서도 잘 작동한다는 장점이 있습니다.
두 번째로 kmean의 경우 아웃라이어 데이터에 취약하다는 단점이 있습니다.
2페이지
전에 조교님이 지적하셨던 사다리 팀의 경우 kmean을 통해 클러스터링을 진행하였다고 밝히고 있습니다. 또한 "현재, v1.0 사다리는 사용자에게 머신러닝 결과와 혼동의 여부를 줄 수 있어, 신뢰성이 있는 블로그가 많이 포함되어있는 집단 / 신뢰성이 떨어지는 블로그가 많이 포함되어있는 집단으로 나누지는 않았습니다. 대신, type의 블로그로 나누어 결과와 해석을 제시합니다." 라는 말을 통해 자신들의 머신러닝 결과가 신뢰성에 대해 나눈 결과와 일치하지 않음을 암시하고 있습니다. 따라서 저희는 접근법을 SVM으로 바꾸어서 신뢰성을 담보할 수 있는 요소들을 차용하여 이러한 문제를 해결하고자 합니다
3페이지
그 외에도 다른 여러 접근법이 있습니다만 최종적으로 저희는 SVM을 사용하는 것이 가장 합당하다고 판단하였습니다.
우선 딥러닝, 신경망 기법은 지나치게 비용이 크고, 고작 수만개의 글로 잘 작동한다는 보장이 없어 배재하였습니다.
그리고 나이브 베이지안 분류기는 kMean과 비슷한 이유로 부적절하다고 판단하였습니다.
에이다부스트도 좋은 알고리즘입니다만 노이즈에 민감하고 오버피팅이 잘 일어난다는 점으로 인해 중구난방인 블로그 글의 분류에 적합하지 않다고 생각하여 제외했습니다.
4페이지
SVM을 구현하기 위해 어떤 피쳐들을 사용할 것인지 조사해본 결과, 이전의 연구를 참고해 카이제곱을 사용하기로 하였고, 이전 발표에서 말씀드린 대로 긍부정어의 비율과 TFIDF를 이용합니다
5페이지
SVM 구현의 세부 사항입니다. 파이썬 기반으로 사이킷 런 라이브러리를 이용하려고 합니다. 같은 파이썬을 통해 플라스크를 구동하므로 손쉬운 연동이 가능할것입니다. 흔히 SVM을 사용할 때 커널 트릭을 이용하지만 이전 연구에 의하여, 우선은 선형 분류만으로도 충분하다고 생각하고 진행하려고 합니다. 혹 잘 작동하지 않는다면 그 때 커널을 적용하려고 합니다.