단순히 한글 형태소 뿐만이 아니라 숫자, 영어, 한자, ‘!’ 등 까지 분류해주었다.


1. 블로그 크롤링 시 어쩔 수 없이 나오는 단어들이 있는데(특히 ui쪽) 다행이도 tf-idf에서 낮은 점수를 받고 걸려진다.
2. 문제점이라 하면, idf가 문서 전체를 분모로 잡고 평가하는 것이기에 표본이 커질 수록 속도가 느리다는 정도이다.


현재 konlpy에서 출력된 결과값과 감정점수 부여 프로그램 속 감정사전의 단어와 호환성이 떨어진다.
예시:
konlpy-> (이쁘, ‘Adjective’)
감정사전->(이쁜, 2점(매우 긍정)
둘이 호환이 안된다.
해결:
자주 쓰이는 단어들을 빈도 순으로 뽑아서(천 단위 예상) 감정사전 개량.
->( 시험 끝난 후 노가다 예정)

광고성?∩ 비광고성의 원소 수가 생각보다 적어서 실제 사용시 해당 원소에 걸리는 블로그 글이 많지는 않을 거라 예상된다.
중간고사 이후 실제 대용량의 블로그 데이터로 전처리 했을 경우에도 원소 수가 적을 경우 카테고리 분류 시 교집합이 아닌 합집합, 즉 단순 tfidf 데이터 중 수치가 높은 데이터만을 뽑아 카테고리 분류에 쓰일 계획이다.

1. 팀원들이 모두 모여 감정어사전 개량
2. 팀원들이 모두 모여 대량 블로그 데이터 크롤링
3. SVM 기능과 현재 전처리된 데이터 연결.
4. 대용량 데이터로 재실험 후 알고리즘 추가 및 변경 

